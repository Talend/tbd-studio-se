<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
		java.util.List
		java.util.Map
	"
%>
<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String localdir = ElementParameterParser.getValue(node, "__LOCALDIR__");
	boolean overwrite = ElementParameterParser.getBooleanValue(node, "__OVERWRITE__");
	String remotedir = ElementParameterParser.getValue(node, "__DATABRICKS_DBFS_FOLDER__");
	boolean includeSubDir = ElementParameterParser.getBooleanValue(node, "__INCLUDSUBDIR__");
	List<Map<String, String>> files = (List<Map<String,String>>)ElementParameterParser.getObjectValue(node, "__FILES__");
	
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
%>

	<%@ include file="@{org.talend.designer.components.bigdata}/components/templates/DBFS/GetDatabricksFileSystem.javajet"%>
	
	
	int nb_file_<%=cid%> = 0;
	int nb_success_<%=cid%> = 0;
	
	String localPath_<%=cid%> = <%=localdir%>;
	if(localPath_<%=cid%>!=null&&!"".equals(localPath_<%=cid%>)){
		java.io.File localDir_<%=cid%> = new java.io.File(localPath_<%=cid%>);
		localDir_<%=cid%>.mkdirs();
	}else{
		throw new RuntimeException("The local Dir required");
	}
	java.util.List<String> msg_<%=cid%> = new java.util.ArrayList<String>();
    java.util.List<java.util.Map<String,String>> list_<%=cid %> = new java.util.ArrayList<java.util.Map<String,String>>();
	<%
    for (int i=0; i<files.size(); i++) {
       	Map<String, String> line = files.get(i);
	%>    
		java.util.Map<String,String> map_<%=cid %>_<%=i %> = new java.util.HashMap<String,String>();
		map_<%=cid %>_<%=i %>.put(<%= line.get("FILEMASK") %>,<%= line.get("NEWNAME") %>);		
	 	list_<%=cid %>.add(map_<%=cid %>_<%=i %>);       
	<%
  	}
	%>

	for (java.util.Map<String, String> map_<%=cid %> : list_<%=cid %>) 
	{

