<%
	// This is the tKafkaInput_end javajet part for Kafka 0.9.0.x
	
	// Since the new Consumer API was introduced in Kafka 0.9.0.x, we must split the javajets
	// in order to generate code with the relevant Consumer API depending of the current Kafka version.
%>
		} // end for ConsumerRecord
<%

	// Stopping conditions for the loop.
	if (tKafkaInputUtil.isStopOnMaxSize()) {
%>
		// Stop reading if the maximum number of input messages has been reached.
		if (tos_count_<%=cid%> >= <%=tKafkaInputUtil.getMaxSize()%>) {
		    break;
		}
<%
	}
	
	// Save the global deadline for all messages.
	if (tKafkaInputUtil.isStopOnMaxDuration()) {
%>
    // Immediately stop processing messagesDeadline if the max duration deadline has passed.
    if (System.currentTimeMillis() > maxDurationDeadline_<%=cid%>)
        break;
<%
	}

// Close the loop scope.
%>
    } catch (org.apache.kafka.common.KafkaException e) {
    	// the process stops when there is AuthenticationException, AuthorizationException, UnknownServerException or UnsupportedVersionException
    	if (e instanceof org.apache.kafka.common.errors.AuthenticationException || e instanceof org.apache.kafka.common.errors.AuthorizationException || e instanceof org.apache.kafka.common.errors.UnknownServerException || e instanceof org.apache.kafka.common.errors.UnsupportedVersionException) {
			throw e;
		} else {
			<%if(isLog4jEnabled){%>	
				log.error("<%=cid%> - " + e.getMessage());
			<%}%>
			System.err.println(e);
			break;
		}
	}
} // end while(true)
