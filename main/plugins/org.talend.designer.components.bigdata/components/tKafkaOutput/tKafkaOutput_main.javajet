<%@ jet
    imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory
    org.talend.core.model.metadata.IMetadataTable 
    org.talend.core.model.metadata.IMetadataColumn 
    org.talend.designer.codegen.config.CodeGeneratorArgument
    java.util.List
    java.util.Map
    java.util.Map.Entry
    java.util.HashMap
    "
%>

<%@ include file="@{org.talend.designer.components.bigdata}/components/tKafkaConnection/tSetKeystore_util.javajet"%>
<%@ include file="@{org.talend.designer.components.bigdata}/components/tKafkaOutput/tKafkaOutput_util.javajet"%>

<%
// Parse the inputs to this javajet generator.
final CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
final INode node = (INode)codeGenArgument.getArgument();
final TKafkaOutputUtil tKafkaOutputUtil = new TKafkaOutputUtil(node);

final String cid = node.getUniqueName();

final boolean dieOnError = "true".equals(ElementParameterParser.getValue(node, "__DIE_ON_ERROR__"));
final boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
%>

final java.util.concurrent.ConcurrentHashMap<String, Exception> <%=cid%>_producerException = new java.util.concurrent.ConcurrentHashMap<>();

<%=cid%>_kafkaProducer.send(new org.apache.kafka.clients.producer.ProducerRecord<byte[], byte[]>(<%=tKafkaOutputUtil.getKafkaTopic()%>, <%=tKafkaOutputUtil.getIncomingConnection().getName()%>.<%=tKafkaOutputUtil.getIncomingColumnName()%>), new org.apache.kafka.clients.producer.Callback() {
	public void onCompletion(org.apache.kafka.clients.producer.RecordMetadata metadata, Exception e) {
		<%=cid%>_producerException.put("exception", new Exception());
		if (e != null) {
			<%=cid%>_producerExceptions.add(e);
		}
		counter_rev.getAndIncrement();
	}
});
counter_send.getAndIncrement();

if (!<%=cid%>_producerExceptions.isEmpty()) {
	Exception e = <%=cid%>_producerExceptions.iterator().next();
	<%
	if (dieOnError) {
	%>
		throw e;
	<%
	} else {
	%>
		if (e instanceof java.lang.IllegalStateException || e instanceof org.apache.kafka.common.errors.SerializationException || e instanceof org.apache.kafka.common.errors.TimeoutException) {
		<%if(isLog4jEnabled){%>	
			log.error("<%=cid%> - " + e.getMessage());
		<%}%>
			System.err.println(e);
		} else {
			throw e;
		}
	<%
	}
	%>
}
	