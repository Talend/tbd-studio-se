<%@ jet 
    imports="
        java.util.Map
        java.util.List
    " 
%>

    <%if(version_3_5_X) {%>
        com.mongodb.MongoClient mongo_<%=cid%>=null;
        com.mongodb.client.MongoDatabase db_<%=cid%>=null;
        <%
    } else {%>
        com.mongodb.Mongo mongo_<%=cid%>=null;
        com.mongodb.DB db_<%=cid%>=null;
        <%
    }%>

    <%if (useExistingConnection) {
        String connection = ElementParameterParser.getValue(node, "__CONNECTION__");
        if(version_3_5_X) {%>
            mongo_<%=cid%>=(com.mongodb.MongoClient)globalMap.get("mongo_<%=connection%>");
            db_<%=cid%> = (com.mongodb.client.MongoDatabase) globalMap.get("db_<%=connection%>");
            <%
        } else {%>
            mongo_<%=cid%>=(com.mongodb.Mongo)globalMap.get("mongo_<%=connection%>");
            db_<%=cid%> = (com.mongodb.DB) globalMap.get("db_<%=connection%>");
            <%
        }
        if(isLog4jEnabled) {%>
            log.info("<%=cid%> - Get an existing client from " + "<%=connection%>" + ".");
            log.info("<%=cid%> - Get an existing DB from " + "<%=connection%>" + ".");
            <%
        }
    } else {%>
        try{ // link with the "finally" on the "finally.javajet"
            // Empty client options
            com.mongodb.MongoClientOptions clientOptions_<%=cid%> = new com.mongodb.MongoClientOptions.Builder().build();
            <%if (useSSL) {%>
                clientOptions_<%=cid%> = new com.mongodb.MongoClientOptions.Builder()
                .socketFactory(javax.net.ssl.SSLSocketFactory.getDefault())
                .build();
                <%
            }
            // Client Credentials
            %>
            // Empty client credentials list
            java.util.List<com.mongodb.MongoCredential> mongoCredentialList_<%=cid%> = new java.util.ArrayList<com.mongodb.MongoCredential>();

            <%
            // Authentication
            if (authentication) {%>
                com.mongodb.MongoCredential mongoCredential_<%=cid%>;
                <%if((authenticationMechanism.equals("NEGOTIATE_MEC")) || (authenticationMechanism.equals("PLAIN_MEC")) || (authenticationMechanism.equals("SCRAMSHA1_MEC"))) {
                    String passwordFieldName = "__PASSWORD__";%>
                    <%@ include file="@{org.talend.designer.components.localprovider}/components/templates/password.javajet"%>

                    <%if(authenticationMechanism.equals("NEGOTIATE_MEC")) {
                        if(dbversion.equals("MONGODB_3_0_X") || dbversion.equals("MONGODB_3_2_X") || version_3_5_X) {%>
                            mongoCredential_<%=cid%> = com.mongodb.MongoCredential.createCredential(<%=dbuser%>, <%=usedAuthenticationDB%>, new String(decryptedPassword_<%=cid%>).toCharArray());
                            <%
                        } else {%>
                            mongoCredential_<%=cid%> = com.mongodb.MongoCredential.createMongoCRCredential(<%=dbuser%>, <%=usedAuthenticationDB%>, new String(decryptedPassword_<%=cid%>).toCharArray());
                            <%
                        }
                    } else if(authenticationMechanism.equals("PLAIN_MEC")) {%>
                        mongoCredential_<%=cid%> = com.mongodb.MongoCredential.createPlainCredential(<%=dbuser%>, "$external", new String(decryptedPassword_<%=cid%>).toCharArray());
                        <%
                    } else if(authenticationMechanism.equals("SCRAMSHA1_MEC")) {%>
                        mongoCredential_<%=cid%> = com.mongodb.MongoCredential.createScramSha1Credential(<%=dbuser%>, <%=usedAuthenticationDB%>, new String(decryptedPassword_<%=cid%>).toCharArray());
                        <%
                    }
                } else { // GSSAPI SASL (KERBEROS)
                    %>
                    System.setProperty("java.security.krb5.realm", <%=krbRealm%>);
                    System.setProperty("java.security.krb5.kdc", <%=krbKdc%>);
                    System.setProperty("javax.security.auth.useSubjectCredsOnly", "false");
                    mongoCredential_<%=cid%> = com.mongodb.MongoCredential.createGSSAPICredential(<%=krbUserPrincipal%>);
                    <%
                }%>
                mongoCredentialList_<%=cid%>.add(mongoCredential_<%=cid%>);
                <%
            }

            // the client
            if(useReplicaSet) {%>
                List<com.mongodb.ServerAddress> addrs_<%=cid%> = new java.util.ArrayList<>();
                <%for(Map<String,String> replicaAddr:replicaAddrs) {%>
                    addrs_<%=cid%>.add(new com.mongodb.ServerAddress(<%=replicaAddr.get("REPLICA_HOST")%>,<%=replicaAddr.get("REPLICA_PORT")%>));
                    <%
                }%>
                mongo_<%=cid%> = new com.mongodb.MongoClient(addrs_<%=cid%>, mongoCredentialList_<%=cid%>, clientOptions_<%=cid%>);
                <%
            } else {%>
                com.mongodb.ServerAddress serverAddress_<%=cid%> = new com.mongodb.ServerAddress(<%=dbhost%>, <%=dbport%>);
                mongo_<%=cid%> = new com.mongodb.MongoClient(serverAddress_<%=cid%>, mongoCredentialList_<%=cid%>, clientOptions_<%=cid%>);
                <%
            }%>

            <%if(queryOptionNoTimeOut) {%>
                mongo_<%=cid%>.addOption(com.mongodb.Bytes.QUERYOPTION_NOTIMEOUT);
                <%
            }%>

            resourceMap.put("mongo_<%=cid%>", mongo_<%=cid%>);
            <%if(version_3_5_X) {%>
                db_<%=cid%> = mongo_<%=cid%>.getDatabase(<%=dbname%>);
                <%
            } else {%>
                db_<%=cid%> = mongo_<%=cid%>.getDB(<%=dbname%>);
                <%
            }
    }%>

    <%if(isLog4jEnabled) {%>
        log.info("<%=cid%> - Connecting to " + mongo_<%=cid%>.getServerAddressList() + ".");
        <%
    }%>