<%@ jet 
%>
	java.util.List<String[]> pigLatins_<%=cid%> = helper_<%=cid%>.getPigLatins();
<%
	if(inMain) {
%>
		<%if (isQuboleDistribution && isQuboleS3Resource) {%>
        	java.util.List<com.amazonaws.services.s3.model.S3ObjectSummary> s3Objects_<%=cid%> = s3Client_<%=start_node%>.listObjectsV2(<%=quboleS3ResourceBucketName%>).getObjectSummaries();
        	java.util.Set<String> s3Keys_<%=cid%> = s3Objects_<%=cid%>.stream().map(obj -> obj.getKey()).collect(java.util.stream.Collectors.toSet());
        <%}%>

		for(String[] pigLatin_<%=cid%> : pigLatins_<%=cid%>) {
			String type_<%=cid%> = pigLatin_<%=cid%>[0];
			<%if(isLog4jEnabled && !isQuboleDistribution) {%>
				log.info("<%=cid%> - register " + type_<%=cid%> + ": " + pigLatin_<%=cid%>[1]);
			<%}%>
			if("query".equals(type_<%=cid%>)) {
<%
				if(isExecutedThroughWebHCat) {
%>
					bw_<%=start_node%>.write(pigLatin_<%=cid%>[1]);
<%					
				} else if (isQuboleDistribution) {
				%>
					statements_<%=start_node%>.append(pigLatin_<%=cid%>[1]);
				<%
				} else {
%>
					pigServer_<%=start_node%>.registerQuery(pigLatin_<%=cid%>[1]);
<%
				}
%>
			} else if ("jar".equals(type_<%=cid%>)) {
<%
				if(isExecutedThroughWebHCat) {
%>
					bw_<%=start_node%>.write("REGISTER " + wasbPath_<%=start_node%> + new java.io.File(pigLatin_<%=cid%>[1]).getName() + ";");
					libjars_<%=start_node%>.append(pigLatin_<%=cid%>[1] + ",");
<%					
				} else if (isQuboleDistribution) {
					if (isQuboleS3Resource) {
				%>
					String jarName_<%=start_node%> = new String();
					String[] pathSplit = pigLatin_<%=cid%>[1].split("/");
            		jarName_<%=start_node%> = pathSplit[pathSplit.length - 1];
            		java.util.regex.Pattern jarPattern = java.util.regex.Pattern.compile(".*\\.jar");
					if (!jarPattern.matcher(jarName_<%=start_node%>).matches()) {
            			throw new IllegalArgumentException("<%=cid%> - Incorrect jar path: " + pigLatin_<%=cid%>[1]);
        			}
        			boolean exist = s3Keys_<%=cid%>.contains(<%=quboleS3ResourceBucketKey%>.replaceAll("^/+|/+$", "") + "/" + jarName_<%=start_node%>);
        			if (!exist) {
						s3Client_<%=start_node%>.putObject(<%=quboleS3ResourceBucketName%>, <%=quboleS3ResourceBucketKey%>.replaceAll("^/+|/+$", "") + "/" + jarName_<%=start_node%>, new java.io.File(pigLatin_<%=cid%>[1]));
					}
					statements_<%=start_node%>.append("REGISTER s3a://" + <%=quboleS3ResourceAccessKey%> + ":" + routines.system.PasswordEncryptUtil.decryptPassword(<%=quboleS3ResourceSecretKey%>) + "@" + <%=quboleS3ResourceBucketName%> + "/" + <%=quboleS3ResourceBucketKey%>.replaceAll("^/+|/+$", "") + "/" + jarName_<%=start_node%> + ";");
					<%if(isLog4jEnabled){%>
						log.info("<%=cid%> - upload jar to S3: " + pigLatin_<%=cid%>[1] + " --> s3a://" + <%=quboleS3ResourceBucketName%> + "/" + <%=quboleS3ResourceBucketKey%>.replaceAll("^/+|/+$", "") + "/" + jarName_<%=start_node%>);
					<%}
					}
				} else {
%>
					pigServer_<%=start_node%>.registerJar(pigLatin_<%=cid%>[1]);
<%
				}
%>
			} else if ("script".equals(type_<%=cid%>)) {
<%
					if(isExecutedThroughWebHCat) {
%>
						bw_<%=start_node%>.write(pigLatin_<%=cid%>[1]);
<%					
					} else if (isQuboleDistribution) {
%>
						// Script is not supported on qubole.
<%
					} else {
%>
						pigServer_<%=start_node%>.registerScript(new java.io.ByteArrayInputStream(pigLatin_<%=cid%>[1].getBytes()));
<%
					}
%>
			} else if ("function".equals(type_<%=cid%>)) {
<%
					if(isExecutedThroughWebHCat) {
%>
					bw_<%=start_node%>.write("DEFINE " + pigLatin_<%=cid%>[1] + " " + pigLatin_<%=cid%>[2] + ";");
<%					
					} else if (isQuboleDistribution) {
%>
						// DEFINE is not supported on qubole.
<%
					} else {
%>
					pigServer_<%=start_node%>.registerFunction(pigLatin_<%=cid%>[1], new org.apache.pig.FuncSpec(pigLatin_<%=cid%>[2]));
<%
					}
%>
			}
		}
<%
	} else {
%>
    	pigScript_<%=start_node%>.addAll(pigLatins_<%=cid%>);
<%
	}
%>
	pigLatins_<%=cid%>.clear();
