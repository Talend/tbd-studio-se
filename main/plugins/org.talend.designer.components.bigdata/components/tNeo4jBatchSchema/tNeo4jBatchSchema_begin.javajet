<%@ jet
	imports="
		org.talend.core.model.process.INode
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
        java.util.List
        java.util.Map
        java.util.HashMap
	"
%>
<%
    // General Talend object
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();

    // Component parameter
    String idConn = "neo4jBatchDatabase_" + ElementParameterParser.getValue(node, "__CONNECTION__");
    List<Map<String, String>> schemaDefinitions = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node, "__SCHEMA__");
    boolean useExistingConnection = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__USE_EXISTING_CONNECTION__"));
    boolean shutdownDb = "true".equalsIgnoreCase(ElementParameterParser.getValue(node, "__SHUTDOWN_DB__"));
    
	if(!useExistingConnection) {
	    List<Map<String, String>> configuration = (List<Map<String, String>>) ElementParameterParser.getObjectValue(node, "__CONFIGURATION__");
	    String dbPath = ElementParameterParser.getValue(node, "__DATABASE_PATH__");
	%>
		// Transform configuration to Map configuration
		java.util.Map<String, String> config = new java.util.HashMap();
	<%
	    if (configuration != null) {
	        for (Map<String, String> params : configuration) {
	            %>
	                config.put("<%=params.get("KEY")%>", <%=params.get("VALUE")%>);
	            <%
	        }
	    }
	%>
		// Just put the database into the global map
		org.neo4j.talend.Neo4jBatchDatabase neo4jBatchDatabase_<%=cid%> = new org.neo4j.talend.Neo4jBatchDatabase(<%=dbPath%>, config);
	
	<%	
	}else{%>

// Retrieve connection
org.neo4j.talend.Neo4jBatchDatabase neo4jBatchDatabase_<%=cid%> = (org.neo4j.talend.Neo4jBatchDatabase) globalMap.get("<%=idConn%>");
	<%
	}
	%>
	try{
	<%
    if (schemaDefinitions != null) {
        for (Map<String, String> definition : schemaDefinitions) {
            %>
                neo4jBatchDatabase_<%=cid%>.createSchema("<%=definition.get("TYPE")%>", <%=definition.get("LABEL")%>, <%=definition.get("PROPERTY")%>);
            <%
        }
    }
%>
    }finally{
<%
        if(!useExistingConnection||(useExistingConnection && shutdownDb)){
%>
    	neo4jBatchDatabase_<%=cid%>.shutdown();
	<%}%>
    }

