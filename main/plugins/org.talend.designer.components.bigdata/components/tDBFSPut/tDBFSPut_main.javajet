<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser
		org.talend.designer.codegen.config.CodeGeneratorArgument
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();
	
	String localdir = ElementParameterParser.getValue(node, "__LOCALDIR__");
	String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
	String remotedir = ElementParameterParser.getValue(node, "__DATABRICKS_DBFS_FOLDER__");
	
	boolean isLog4jEnabled = ("true").equals(ElementParameterParser.getValue(node.getProcess(), "__LOG4J_ACTIVATE__"));
%>	      				
   		java.util.Set<String> keySet_<%=cid %> = map_<%=cid %>.keySet();
      	for (String key_<%=cid %> : keySet_<%=cid %>){     
			String tempdir_<%=cid %> =  localdir_<%=cid %>;
			String filemask_<%=cid %> = key_<%=cid %>; 
			String dir_<%=cid %> = null;
            String mask_<%=cid %> = filemask_<%=cid %>.replaceAll("\\\\", "/") ;
			int i_<%=cid %> = mask_<%=cid %>.lastIndexOf('/');
  			if (i_<%=cid %>!=-1){
				dir_<%=cid %> = mask_<%=cid %>.substring(0, i_<%=cid %>); 
				mask_<%=cid %> = mask_<%=cid %>.substring(i_<%=cid %>+1);	 
    		}
    		if (dir_<%=cid %>!=null && !"".equals(dir_<%=cid %>)) tempdir_<%=cid %> = tempdir_<%=cid %> + "/" + dir_<%=cid %>;  
            mask_<%=cid %> = mask_<%=cid %>.replaceAll("\\.", "\\\\.").replaceAll("\\*", ".*");
    		final String finalMask_<%=cid %> = mask_<%=cid %>;
    		java.io.File[] listings_<%=cid %> = null;       
        	java.io.File file_<%=cid %> = new java.io.File(tempdir_<%=cid %>);
        	if (file_<%=cid %>.isDirectory()) {
	            listings_<%=cid %> = file_<%=cid %>.listFiles(new java.io.FileFilter() {
	                public boolean accept(java.io.File pathname) {
	                    boolean result = false;
	                    if (pathname != null && pathname.isFile()) {                      
	                            result = java.util.regex.Pattern.compile(finalMask_<%=cid %>).matcher(pathname.getName()).find(); 
	                    	}
	                    return result;
	                }
	            });
        	} 
	    	if(listings_<%=cid %> == null || listings_<%=cid %>.length <= 0){
	    		System.err.println("No match file("+key_<%=cid %>+") exists!");
	    		<%if(isLog4jEnabled) {%>
       			log.error("<%=cid%> - No match file("+key_<%=cid %>+") exists!");
        		<%}%>
	    	}else{
	    		String localFilePath_<%=cid%> = "";
	    		String dbfsFilePath_<%=cid%> = "";
	    		for (int m_<%=cid %> = 0; m_<%=cid %> < listings_<%=cid %>.length; m_<%=cid %>++){ 
	     			if (listings_<%=cid %>[m_<%=cid %>].getName().matches(mask_<%=cid %>)){    
	     				localFilePath_<%=cid%> = listings_<%=cid %>[m_<%=cid %>].getAbsolutePath();
	     				if(map_<%=cid %>.get(key_<%=cid %>) == null || map_<%=cid %>.get(key_<%=cid %>).isEmpty()){
	     					dbfsFilePath_<%=cid%> = java.nio.file.Paths.get(<%=remotedir%>).resolve(java.nio.file.Paths.get(localFilePath_<%=cid%>).getFileName().toString()).toString().replaceAll("\\\\", "/");
	     				} else {
							dbfsFilePath_<%=cid%> = java.nio.file.Paths.get(<%=remotedir%>).resolve(map_<%=cid %>.get(key_<%=cid %>)).toString().replaceAll("\\\\", "/");
						}
						try{
							dbfs_<%=cid%>.copyFromLocal(localFilePath_<%=cid%>, dbfsFilePath_<%=cid%>);
		    				// add info to list will return
		    				msg_<%=cid%>.add("file: " + listings_<%=cid %>[m_<%=cid %>].getAbsolutePath() + ", size: "
		                    	+ listings_<%=cid %>[m_<%=cid %>].length() + " bytes upload successfully");
		                   
		    				nb_success_<%=cid%>++;
		    			}catch(java.lang.Exception e) {
		                	<%
  						      	if(("true").equals(dieOnError)){
							%>
            				throw(e);
							<%
								}else{
							%>
							System.err.print(e.getMessage());
							<%   
									if(isLog4jEnabled) {
							%>
       						log.error("<%=cid%> - " + e.getMessage());
        					<%
        							}
								}
						    %>
		                }
						nb_file_<%=cid%>++;
	      			}
	    		}	
	    	}
	    }
